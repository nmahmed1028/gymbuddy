"""
✨ `Recipe_KeyOutput` returns the primary key fields of table type `Recipe`.

It has the same format as `Recipe_Key`, but is only used as mutation return value.
"""
scalar Recipe_KeyOutput
"""
✨ `User_KeyOutput` returns the primary key fields of table type `User`.

It has the same format as `User_Key`, but is only used as mutation return value.
"""
scalar User_KeyOutput
"""
✨ `UserGoal_KeyOutput` returns the primary key fields of table type `UserGoal`.

It has the same format as `UserGoal_Key`, but is only used as mutation return value.
"""
scalar UserGoal_KeyOutput
"""
✨ `UserProgress_KeyOutput` returns the primary key fields of table type `UserProgress`.

It has the same format as `UserProgress_Key`, but is only used as mutation return value.
"""
scalar UserProgress_KeyOutput
"""
✨ Generated data input type for table 'Recipe'. It includes all necessary fields for creating or upserting rows into table.
"""
input Recipe_Data {
  """
  ✨ Generated from Field `Recipe`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Recipe`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Recipe`.`calories` of type `Int`
  """
  calories: Int
  """
  ✨ Generated from Field `Recipe`.`instructions` of type `String`
  """
  instructions: String
  """
  ✨ `_expr` server value variant of `instructions` (✨ Generated from Field `Recipe`.`instructions` of type `String`)
  """
  instructions_expr: String_Expr
  """
  ✨ Generated from Field `Recipe`.`name` of type `String!`
  """
  name: String
  """
  ✨ `_expr` server value variant of `name` (✨ Generated from Field `Recipe`.`name` of type `String!`)
  """
  name_expr: String_Expr
  """
  ✨ Generated from Field `Recipe`.`type` of type `String`
  """
  type: String
  """
  ✨ `_expr` server value variant of `type` (✨ Generated from Field `Recipe`.`type` of type `String`)
  """
  type_expr: String_Expr
}
"""
✨ Generated filter input type for table 'Recipe'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Recipe_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Recipe_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Recipe_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Recipe_Filter!]
  """
  ✨ Generated from Field `Recipe`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Recipe`.`calories` of type `Int`
  """
  calories: Int_Filter
  """
  ✨ Generated from Field `Recipe`.`instructions` of type `String`
  """
  instructions: String_Filter
  """
  ✨ Generated from Field `Recipe`.`name` of type `String!`
  """
  name: String_Filter
  """
  ✨ Generated from Field `Recipe`.`type` of type `String`
  """
  type: String_Filter
}
"""
✨ Generated first-row input type for table 'Recipe'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Recipe_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Recipe_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Recipe_Filter
}
"""
✨ Generated key input type for table 'Recipe'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Recipe_Key {
  """
  ✨ Generated from Field `Recipe`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Recipe`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Recipe'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Recipe_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Recipe_Filter
}
"""
✨ Generated order input type for table 'Recipe'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Recipe_Order {
  """
  ✨ Generated from Field `Recipe`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Recipe`.`calories` of type `Int`
  """
  calories: OrderDirection
  """
  ✨ Generated from Field `Recipe`.`instructions` of type `String`
  """
  instructions: OrderDirection
  """
  ✨ Generated from Field `Recipe`.`name` of type `String!`
  """
  name: OrderDirection
  """
  ✨ Generated from Field `Recipe`.`type` of type `String`
  """
  type: OrderDirection
}
"""
✨ Generated data input type for table 'User'. It includes all necessary fields for creating or upserting rows into table.
"""
input User_Data {
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: String
  """
  ✨ `_expr` server value variant of `email` (✨ Generated from Field `User`.`email` of type `String!`)
  """
  email_expr: String_Expr
  """
  ✨ Generated from Field `User`.`displayname` of type `String`
  """
  displayname: String
  """
  ✨ `_expr` server value variant of `displayname` (✨ Generated from Field `User`.`displayname` of type `String`)
  """
  displayname_expr: String_Expr
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `User`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `User`.`username` of type `String!`
  """
  username: String
  """
  ✨ `_expr` server value variant of `username` (✨ Generated from Field `User`.`username` of type `String!`)
  """
  username_expr: String_Expr
  """
  ✨ Generated from Field `User`.`weight` of type `Int`
  """
  weight: Int
}
"""
✨ Generated filter input type for table 'User'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input User_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [User_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: User_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [User_Filter!]
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: String_Filter
  """
  ✨ Generated from Field `User`.`displayname` of type `String`
  """
  displayname: String_Filter
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `User`.`username` of type `String!`
  """
  username: String_Filter
  """
  ✨ Generated from Field `User`.`weight` of type `Int`
  """
  weight: Int_Filter
  """
  ✨ Generated from Field `User`.`userGoals_on_user` of type `[UserGoal!]!`
  """
  userGoals_on_user: UserGoal_ListFilter
  """
  ✨ Generated from Field `User`.`userProgress_on_user` of type `UserProgress`
  """
  userProgress_on_user: UserProgress_Filter
}
"""
✨ Generated first-row input type for table 'User'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input User_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [User_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: User_Filter
}
"""
✨ Generated key input type for table 'User'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input User_Key {
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: String
  """
  ✨ `_expr` server value variant of `email` (✨ Generated from Field `User`.`email` of type `String!`)
  """
  email_expr: String_Expr
}
"""
✨ Generated list filter input type for table 'User'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input User_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: User_Filter
}
"""
✨ Generated order input type for table 'User'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input User_Order {
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: OrderDirection
  """
  ✨ Generated from Field `User`.`displayname` of type `String`
  """
  displayname: OrderDirection
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `User`.`username` of type `String!`
  """
  username: OrderDirection
  """
  ✨ Generated from Field `User`.`weight` of type `Int`
  """
  weight: OrderDirection
}
"""
✨ Generated data input type for table 'UserGoal'. It includes all necessary fields for creating or upserting rows into table.
"""
input UserGoal_Data {
  """
  ✨ Generated from Field `UserGoal`.`userEmail` of type `String!`
  """
  userEmail: String
  """
  ✨ `_expr` server value variant of `userEmail` (✨ Generated from Field `UserGoal`.`userEmail` of type `String!`)
  """
  userEmail_expr: String_Expr
  """
  ✨ Generated from Field `UserGoal`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `UserGoal`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `UserGoal`.`user` of type `User!`
  """
  user: User_Key
  """
  ✨ Generated from Field `UserGoal`.`completed` of type `Boolean!`
  """
  completed: Boolean
  """
  ✨ Generated from Field `UserGoal`.`goalPoints` of type `Int!`
  """
  goalPoints: Int
  """
  ✨ Generated from Field `UserGoal`.`goalText` of type `String`
  """
  goalText: String
  """
  ✨ `_expr` server value variant of `goalText` (✨ Generated from Field `UserGoal`.`goalText` of type `String`)
  """
  goalText_expr: String_Expr
  """
  ✨ Generated from Field `UserGoal`.`goalType` of type `String!`
  """
  goalType: String
  """
  ✨ `_expr` server value variant of `goalType` (✨ Generated from Field `UserGoal`.`goalType` of type `String!`)
  """
  goalType_expr: String_Expr
}
"""
✨ Generated filter input type for table 'UserGoal'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input UserGoal_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [UserGoal_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: UserGoal_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [UserGoal_Filter!]
  """
  ✨ Generated from Field `UserGoal`.`userEmail` of type `String!`
  """
  userEmail: String_Filter
  """
  ✨ Generated from Field `UserGoal`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `UserGoal`.`user` of type `User!`
  """
  user: User_Filter
  """
  ✨ Generated from Field `UserGoal`.`completed` of type `Boolean!`
  """
  completed: Boolean_Filter
  """
  ✨ Generated from Field `UserGoal`.`goalPoints` of type `Int!`
  """
  goalPoints: Int_Filter
  """
  ✨ Generated from Field `UserGoal`.`goalText` of type `String`
  """
  goalText: String_Filter
  """
  ✨ Generated from Field `UserGoal`.`goalType` of type `String!`
  """
  goalType: String_Filter
}
"""
✨ Generated first-row input type for table 'UserGoal'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input UserGoal_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [UserGoal_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: UserGoal_Filter
}
"""
✨ Generated key input type for table 'UserGoal'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input UserGoal_Key {
  """
  ✨ Generated from Field `UserGoal`.`userEmail` of type `String!`
  """
  userEmail: String
  """
  ✨ `_expr` server value variant of `userEmail` (✨ Generated from Field `UserGoal`.`userEmail` of type `String!`)
  """
  userEmail_expr: String_Expr
  """
  ✨ Generated from Field `UserGoal`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `UserGoal`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'UserGoal'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input UserGoal_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: UserGoal_Filter
}
"""
✨ Generated order input type for table 'UserGoal'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input UserGoal_Order {
  """
  ✨ Generated from Field `UserGoal`.`userEmail` of type `String!`
  """
  userEmail: OrderDirection
  """
  ✨ Generated from Field `UserGoal`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `UserGoal`.`user` of type `User!`
  """
  user: User_Order
  """
  ✨ Generated from Field `UserGoal`.`completed` of type `Boolean!`
  """
  completed: OrderDirection
  """
  ✨ Generated from Field `UserGoal`.`goalPoints` of type `Int!`
  """
  goalPoints: OrderDirection
  """
  ✨ Generated from Field `UserGoal`.`goalText` of type `String`
  """
  goalText: OrderDirection
  """
  ✨ Generated from Field `UserGoal`.`goalType` of type `String!`
  """
  goalType: OrderDirection
}
"""
✨ Generated data input type for table 'UserProgress'. It includes all necessary fields for creating or upserting rows into table.
"""
input UserProgress_Data {
  """
  ✨ Generated from Field `UserProgress`.`userEmail` of type `String!`
  """
  userEmail: String
  """
  ✨ `_expr` server value variant of `userEmail` (✨ Generated from Field `UserProgress`.`userEmail` of type `String!`)
  """
  userEmail_expr: String_Expr
  """
  ✨ Generated from Field `UserProgress`.`user` of type `User!`
  """
  user: User_Key
  """
  ✨ Generated from Field `UserProgress`.`dailyGoalsCompleted` of type `Int`
  """
  dailyGoalsCompleted: Int
  """
  ✨ Generated from Field `UserProgress`.`monthlyGoalsCompleted` of type `Int`
  """
  monthlyGoalsCompleted: Int
  """
  ✨ Generated from Field `UserProgress`.`progress` of type `Int!`
  """
  progress: Int
  """
  ✨ Generated from Field `UserProgress`.`totalGoalsCompleted` of type `Int`
  """
  totalGoalsCompleted: Int
  """
  ✨ Generated from Field `UserProgress`.`weeklyGoalsCompleted` of type `Int`
  """
  weeklyGoalsCompleted: Int
}
"""
✨ Generated filter input type for table 'UserProgress'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input UserProgress_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [UserProgress_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: UserProgress_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [UserProgress_Filter!]
  """
  ✨ Generated from Field `UserProgress`.`userEmail` of type `String!`
  """
  userEmail: String_Filter
  """
  ✨ Generated from Field `UserProgress`.`user` of type `User!`
  """
  user: User_Filter
  """
  ✨ Generated from Field `UserProgress`.`dailyGoalsCompleted` of type `Int`
  """
  dailyGoalsCompleted: Int_Filter
  """
  ✨ Generated from Field `UserProgress`.`monthlyGoalsCompleted` of type `Int`
  """
  monthlyGoalsCompleted: Int_Filter
  """
  ✨ Generated from Field `UserProgress`.`progress` of type `Int!`
  """
  progress: Int_Filter
  """
  ✨ Generated from Field `UserProgress`.`totalGoalsCompleted` of type `Int`
  """
  totalGoalsCompleted: Int_Filter
  """
  ✨ Generated from Field `UserProgress`.`weeklyGoalsCompleted` of type `Int`
  """
  weeklyGoalsCompleted: Int_Filter
}
"""
✨ Generated first-row input type for table 'UserProgress'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input UserProgress_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [UserProgress_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: UserProgress_Filter
}
"""
✨ Generated key input type for table 'UserProgress'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input UserProgress_Key {
  """
  ✨ Generated from Field `UserProgress`.`userEmail` of type `String!`
  """
  userEmail: String
  """
  ✨ `_expr` server value variant of `userEmail` (✨ Generated from Field `UserProgress`.`userEmail` of type `String!`)
  """
  userEmail_expr: String_Expr
}
"""
✨ Generated list filter input type for table 'UserProgress'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input UserProgress_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: UserProgress_Filter
}
"""
✨ Generated order input type for table 'UserProgress'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input UserProgress_Order {
  """
  ✨ Generated from Field `UserProgress`.`userEmail` of type `String!`
  """
  userEmail: OrderDirection
  """
  ✨ Generated from Field `UserProgress`.`user` of type `User!`
  """
  user: User_Order
  """
  ✨ Generated from Field `UserProgress`.`dailyGoalsCompleted` of type `Int`
  """
  dailyGoalsCompleted: OrderDirection
  """
  ✨ Generated from Field `UserProgress`.`monthlyGoalsCompleted` of type `Int`
  """
  monthlyGoalsCompleted: OrderDirection
  """
  ✨ Generated from Field `UserProgress`.`progress` of type `Int!`
  """
  progress: OrderDirection
  """
  ✨ Generated from Field `UserProgress`.`totalGoalsCompleted` of type `Int`
  """
  totalGoalsCompleted: OrderDirection
  """
  ✨ Generated from Field `UserProgress`.`weeklyGoalsCompleted` of type `Int`
  """
  weeklyGoalsCompleted: OrderDirection
}
